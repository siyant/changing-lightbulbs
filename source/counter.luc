module counter (
    input clk,       // clock
    input rst,       // reset
    input upbutton,    // button input
    input downbutton,
    output count[8]  // press counter
  ) {
   
  .clk(clk) {
    edge_detector edge_detector(#RISE(1), #FALL(0)); // detect rising edges
     button_conditioner button_cond;     // button input button_conditioner
     edge_detector edge_detectord(#RISE(1), #FALL(0)); // detect rising edges
     button_conditioner button_condd;     // button input button_conditioner
    .rst(rst) {
       dff ctr[8]; // our lovely counter
    }
  }
 
  always {
   count = ctr.q;             // output the counter
   button_cond.in = upbutton;            // raw button input
   edge_detector.in = button_cond.out; // input to the edge_detector
   button_condd.in = downbutton;            // raw button input
   edge_detectord.in = button_condd.out; // input to the edge_detector

    if (edge_detector.out)     // if edge detected
      { ctr.d = ctr.q + 1; }       // add one to the counter
    
    if (edge_detectord.out)
      { ctr.d = ctr.q - 1;}
  }
  
}